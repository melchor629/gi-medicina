{"version":3,"sources":["webpack:///./src/app/shared/medicamento.model.ts","webpack:///./src/app/shared/login.service.ts","webpack:///./src/app/dialogo-formulario/dialogo-formulario.component.ts","webpack:///./src/app/dialogo/dialogo.component.ts","webpack:///./src/app/shared/configuracion.ts","webpack:///./src/app/shared/datos.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/medicamento/medicamento.component.ts","webpack:///./src/app/pantallas/datos/datos.component.ts","webpack:///./src/app/pantallas/login/login.component.ts","webpack:///./src/app/shared/laboratorio.model.ts","webpack:///./src/app/shared/permiso.model.ts","webpack:///./src/app/shared/usuario.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/dialogo-formulario/dialogo-formulario.component.css","webpack:///./src/app/dialogo/dialogo.component.css","webpack:///./src/app/medicamento/medicamento.component.css","webpack:///./src/app/pantallas/datos/datos.component.css","webpack:///./src/app/pantallas/login/login.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/dialogo-formulario/dialogo-formulario.component.html","webpack:///./src/app/dialogo/dialogo.component.html","webpack:///./src/app/medicamento/medicamento.component.html","webpack:///./src/app/pantallas/datos/datos.component.html","webpack:///./src/app/pantallas/login/login.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["/**\n * Created by antonio on 22/01/17.\n */\n\n\nexport class Medicamento{ // representa un medicamento en la aplicacion\n\n  // El id ya lo dara la base de datos...\n  constructor(public idMedicamento:number,public nombreMedicamento:string, public cantidadDisponible: number, public laboratorio: number){}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/medicamento.model.ts","/**\n * Created by antonio on 21/01/17.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { Http, Headers, Response } from \"@angular/http\";\nimport { Observable } from \"rxjs/Rx\";\nimport \"rxjs/add/operator/do\";\nimport \"rxjs/add/operator/map\";\nimport {Usuario} from \"./usuario.model\";\nimport {Configuracion} from \"./configuracion\";\nimport { Permiso } from \"./permiso.model\";\n\n\n// Al ser injectable es susceptible del sistema de inyeccion de dependencias de angular\n@Injectable()\n\nexport class LoginService {\n\n  usuario: Usuario; // representa el usuario que esta usando la aplicacion, al sr este servicio un singleton por estar importado\n  // en el componente raiz, siempre estara accesible\n\n  constructor(private http: Http) { // Inyeccion de dependencias de angular, ahora se tiene acceso a http\n    this.usuario = new Usuario(); // Se crea una instancia\n  }\n\n\n  login(nombre: string, pass: string) {\n\n    this.usuario.nombre = nombre;\n\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\"); // Se va a mandar un JSON al servidor\n    headers.append(\"Accept\", \"application/json\"); // Y se recibe JSON\n\n    return this.http.post(\n      Configuracion.apiBaseUrl + \"login\", // En principio ruta login\n\n      // A continuacion se crea el json\n      JSON.stringify({\n        usuario: nombre,\n        pass: pass,\n      }),\n      { headers: headers } // Se añade el header para indicar que se manda un JSON al servidor\n    )\n      .map(response => response.json()) // Convertir respuesta JSON en estructura del lenguaje, uso de funcion arrow\n      .do(data => {\n        Configuracion.token = data.token; // Se obtiene un token\n\n        // A continuacion se recorre el array que esta en la propiedad permisos\n        // Y asi se rellena el array del usuario\n        data.permisos.forEach((permiso) => {\n          this.usuario.permisos.push(new Permiso(permiso.pantalla, permiso.acceso, permiso.modificacion));\n        });\n\n      })\n      .catch(this.handleErrors);\n  }\n\n  // Gestion de errores\n  handleErrors(error: Response) {\n    return Observable.throw(error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/login.service.ts","/**\n * Created by antonio on 21/01/17.\n */\nimport {Component, Input} from '@angular/core';\nimport {Medicamento} from \"../shared/medicamento.model\";\nimport {Laboratorio} from \"../shared/laboratorio.model\";\nimport {MdDialogRef} from \"@angular/material\";\n\n@Component({\n  selector: 'dialogoEdicion',\n  templateUrl: './dialogo-formulario.component.html',\n  styleUrls: ['./dialogo-formulario.component.css']\n})\n\n\n// Esto representa un dialogo de datos, al cual simplemente se le pasan los datos a representar\n\nexport class DialogoFormularioComponent{\n\n  // Este componente es polivalente, puesto que sirve para editar datos existentes\n\n  @Input() medicamento: Medicamento;\n  @Input() modo:boolean; // True si es creacion, false si es edicion\n  @Input() listaLaboratorios: Array<Laboratorio>;\n  @Input() referenciaDialogo: any;\n\n  constructor(public dialogRef: MdDialogRef<DialogoFormularioComponent>){}\n\n  submit(formulario:any){ // Al hacer el submit del formulario\n  // Al hacer el submit se debe cerrar la ventana\n    this.dialogRef.close();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialogo-formulario/dialogo-formulario.component.ts","/**\n * Created by antonio on 21/01/17.\n */\nimport {Component, Input} from '@angular/core';\nimport {Medicamento} from \"../shared/medicamento.model\";\nimport {DatosService} from \"../shared/datos.service\";\n\n@Component({\n  selector: 'dialogoContenido',\n  templateUrl: './dialogo.component.html',\n  styleUrls: ['./dialogo.component.css']\n})\n\n\n// Esto representa un dialogo para mostrar datos, al cual simplemente se le pasan los datos que debe mostrar\n\nexport class DialogoComponent{\n\n\n  @Input() medicamento:Medicamento;\n  @Input() nombreLab:string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialogo/dialogo.component.ts","/**\n * Created by antonio on 21/01/17.\n */\n\n// La url de la API a la que la aplicacion hara las peticiones\nexport class Configuracion{\n\n  static apiBaseUrl = \"http://localhost:3000/\";\n  static token = \"\"; // Donde se almacenara el token que se obtenga del servidor, es un campo estatico de una clase!\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/configuracion.ts","/**\n * Created by antonio on 22/01/17.\n */\n\n/*\nEste servicio gestiona lo relacionado con los datos de medicamentos que manejala aplicación: (obtener, eliminar, editar...)\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { Http, Headers, Response } from \"@angular/http\";\nimport { Observable } from \"rxjs/Rx\";\nimport \"rxjs/add/operator/do\";\nimport \"rxjs/add/operator/map\";\nimport { Configuracion } from \"./configuracion\";\nimport {Medicamento} from \"./medicamento.model\";\nimport {Laboratorio} from \"./laboratorio.model\";\n\n// Al ser un servicio, es injectable, de ahi su decorador\n\n@Injectable()\n\nexport class DatosService {\n\n  medicamentosLista: Array<Medicamento>;\n  listaLaboratorios: Array<Laboratorio>;\n\n  constructor(private http: Http) { // Inyeccion de dependencias de angular, ahora se tiene acceso a http\n\n    // Hsta que se rellene es provisional\n    this.medicamentosLista = [new Medicamento(0,\"Cargando...\",0,0)];\n    this.listaLaboratorios = []; // Array vacio\n  }\n\n  // En todas las operaciones de esta clase se requiere adjuntar el token de autenticacion\n\n  // Obtiene la lista de medicamentos, normalmente deberia llamarse una vez al inicio de la aplicacion. Permite rellenar el array medicamentosLista\n  obtenerLista(){\n    let headers = new Headers();\n    headers.append(\"AuthToken\", Configuracion.token); // Token obtenido del login\n\n    return this.http.get(Configuracion.apiBaseUrl + \"datos_medicamentos\", {\n      headers: headers\n    })\n      .map(res => res.json())\n      .do(data => { // Al no devolver nada, se hace un do\n\n        this.medicamentosLista.length = 0; // Limpiamos el array para volverlo a rellenar, asi se mantienen las referencias!!\n\n        data.forEach((medicamento) => {\n         this.medicamentosLista.push(new Medicamento(medicamento.ID_MEDICAMENTO,medicamento.NOMBRE_MEDICAMENTO,medicamento.CANTIDAD_DISPONIBLE,medicamento.LABORATORIO));\n        });\n\n        // Esta vez no se devuelve nada\n      })\n      .catch(this.handleErrors);\n  }\n\n\n  // Inserta un medicamento en la base de datos\n  insertar(medicamento: Medicamento){\n\n    /*\n    Al servidor se manda el siguiente JSON:\n    {\n    \"nombre\": x,\n    \"cantidad\": x,\n    \"laboratorio\": x\n    }\n    */\n  // Se inserta el medicamento en el array de medicamentos\n    this.medicamentosLista.push(medicamento); // se añade el medicamento a la lista\n\n    // Ahora se hace la peticion al servidor, el cual devuelve el id, que debe ser modificado en el medicamento nuevo!\n    // Para ello una vez se complete la peticion, el medicamento se busca en el array con id = -1 y ya se le asigna el id correcto de cara al\n    // futuro uso de la aplicacion\n  }\n\n  // Modifica un medicamento\n  modificar(medicamento: Medicamento){\n\n    /*\n     Al servidor se manda el siguiente JSON?:\n     {\n     \"id\": x,\n     \"nombre\": x,\n     \"cantidad\": x,\n     \"laboratorio\": x\n     }\n     */\n// Simplemente se manda la peticion al servidor, en el cliente no es necesario modificar el dato gracias al two way data binding\n  }\n\n  obtenerLaboratorios(){\n    let headers = new Headers();\n    headers.append(\"AuthToken\", Configuracion.token); // Token obtenido del login, campo estatico de clase\n\n    return this.http.get(Configuracion.apiBaseUrl + \"laboratorios\", {\n      headers: headers\n    })\n      .map(res => res.json())\n      .do(data => { // Al no devolver nada, se hace un do\n\n        data.forEach((laboratorio) => {\n          this.listaLaboratorios.push(new Laboratorio(laboratorio.ID_LABORATORIO, laboratorio.NOMBRE_LABORATORIO));\n        });\n        console.log(this.listaLaboratorios);\n        // Esta vez no se devuelve nada\n      })\n      .catch(this.handleErrors);\n  }\n\n  borrar(id: number){ // Borra un medicamento, simplementa se pasa la id de este\n\n    console.log(\"Se pide borrar el elemento con id; \"+id);\n    // En primer lugar se quita de la lista, para ello se localiza\n    this.medicamentosLista.splice(this.localizarPorId(id),1); // Se elimina el elemento del array\n\n    // Se procede a borrarlo de la base de datos en el servidor..., hacer llamada a la API...\n  }\n\n  public localizarPorId(id: number):number{\n    let i = 0;\n\n    while(i < this.medicamentosLista.length && this.medicamentosLista[i].idMedicamento != id){\n      i++;\n    }\n    // Suponiendo que siempre se encuentra en lalista no habria que controlar otra situacion\n    return i;\n  }\n\n  public localizarLabPorId(id: number){\n    let i = 0;\n\n    while(i < this.listaLaboratorios.length && this.listaLaboratorios[i].id != id){\n      i++;\n    }\n    // Suponiendo que siempre se encuentra en lalista no habria que controlar otra situacion\n    return i;\n  }\n\n\n  // Gestion de errores\n  handleErrors(error: Response) {\n    return Observable.throw(error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datos.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 528;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 528\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { LoginService} from './shared/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [LoginService]\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material'\nimport { AppComponent } from './app.component';\nimport {navigatableComponents, appRoutes} from \"./app.routing\";\nimport {RouterModule} from \"@angular/router\";\nimport {DialogoComponent} from \"./dialogo/dialogo.component\";\nimport {DialogoFormularioComponent} from \"./dialogo-formulario/dialogo-formulario.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent, ...navigatableComponents\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule.forRoot(),\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogoComponent, DialogoFormularioComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * Created by antonio on 21/01/17.\n */\nimport 'hammerjs'; // necesario para que funcionen ciertos elementos de angular material\nimport {Routes} from '@angular/router';\nimport { DatosComponent } from './pantallas/datos/datos.component';\nimport {LoginComponent} from \"./pantallas/login/login.component\";\nimport {MedicamentoComponent} from \"./medicamento/medicamento.component\";\nimport {DialogoComponent} from \"./dialogo/dialogo.component\";\nimport {DialogoFormularioComponent} from \"./dialogo-formulario/dialogo-formulario.component\";\n\nexport const appRoutes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'lista', component: DatosComponent }\n];\n\nexport const navigatableComponents = [\n  LoginComponent, DatosComponent, MedicamentoComponent, DialogoComponent, DialogoFormularioComponent, DialogoFormularioComponent // Necesario para la declaracion en el modulo, aunque no sea navegable\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","/**\n * Created by antonio on 22/01/17.\n */\n\n/**\n * Created by antonio on 21/01/17.\n */\nimport {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {DatosService} from \"../shared/datos.service\";\nimport {Medicamento} from \"../shared/medicamento.model\";\nimport {LoginService} from \"../shared/login.service\";\n\n@Component({\n  selector: 'medicamento',\n  templateUrl: './medicamento.component.html',\n  styleUrls: ['./medicamento.component.css'],\n})\n\n\nexport class MedicamentoComponent{\n\n  //Entradas que se le proporciona a los componentes\n  @Input() medicamento: Medicamento;\n  @Input() criterioBusqueda:string;\n\n  // Salidas: El componente proporciona salidas\n  // El tipo generico indica la carga util del evento, en este caso un numero\n  @Output() verDetalles: EventEmitter<number> = new EventEmitter<number>();\n  // Cuando se quiere editar el evento\n  @Output() editarMedicamento: EventEmitter<number> = new EventEmitter<number>(); // La id\n\n  constructor(private servicioDatos: DatosService, public servicioLogin: LoginService){ // Se obtiene con inyecion de dependencias el servicio de datos para\n    // poder hacer operaciones con el elemento...\n    this.criterioBusqueda = \"\";\n  }\n\n  borrar(){ // permite borrar un elemento, tras eso se lanzar\n    this.servicioDatos.borrar(this.medicamento.idMedicamento);\n  }\n\n  cumpleCriterio():boolean{\n    console.log(\"Nombre: \"+this.medicamento.nombreMedicamento+\" y criterio: \"+this.criterioBusqueda);\n\n    let retorno = true;\n\n    if(typeof this.criterioBusqueda !== 'undefined') {\n      retorno = this.medicamento.nombreMedicamento.toLowerCase().indexOf(this.criterioBusqueda.toLowerCase()) !== -1;\n    }\n\n    return retorno;\n  }\n\n  onClickDetalles(){\n    this.verDetalles.emit(this.medicamento.idMedicamento); // Se devuelve el id de medicamento\n  }\n\n  editar(){ // edicion del medicamento..., debe propagarse un evento de que se desea editar\n    this.editarMedicamento.emit(this.medicamento.idMedicamento);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/medicamento/medicamento.component.ts","/**\n * Created by antonio on 21/01/17.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {LoginService} from \"../../shared/login.service\";\nimport {Configuracion} from \"../../shared/configuracion\";\nimport {Router} from \"@angular/router\";\nimport {Usuario} from \"../../shared/usuario.model\";\nimport {DatosService} from \"../../shared/datos.service\";\nimport {MdDialog} from \"@angular/material\"\nimport {DialogoComponent} from \"../../dialogo/dialogo.component\";\nimport {DialogoFormularioComponent} from \"../../dialogo-formulario/dialogo-formulario.component\";\nimport {Medicamento} from \"../../shared/medicamento.model\";\n\n@Component({\n  selector: 'datos',\n  templateUrl: './datos.component.html',\n  styleUrls: ['./datos.component.css'],\n  providers: [DatosService]\n  // No se usa pipe porque: We must include our pipe in the declarations array of the AppModule\n})\nexport class DatosComponent implements OnInit{\n\n\n  busquedaNombre: string;\n  usuario: Usuario; // Servicio login es un singleton, de ahi que en esta pagina siga el objeto...\n  listaMedicamentos: any;\n\n  constructor(private servicioLogin: LoginService, private router: Router, private servicioDatos: DatosService, private dialogo: MdDialog) { // Inyeccion de dependencias de angular, el servicio deberia ser singleton\n    this.usuario = servicioLogin.usuario;\n    this.listaMedicamentos = servicioDatos.medicamentosLista;\n  }\n\n  logout(): void{\n    Configuracion.token = \"\"; // Se borra el token\n    this.router.navigate([\"\"]); // se vuelve a la pantalla de login\n    this.busquedaNombre = \"\"; // Cadena vacia\n  }\n\n  ngOnInit(): void {\n\n    if(Configuracion.token == \"\"){\n      alert(\"Debes tener un token valido! Accede primero con tu usuario\");\n      this.router.navigate([\"\"]);\n    }\n  else {\n      this.servicioDatos.obtenerLista().subscribe(\n        () => {\n        }, // Si exito no se hace nada, // Hay que actualizar la referencia, que al finalno es necesario por el trcuo de vaciar el array: array.length = 0;\n        (error) => {\n          alert(\"Oh, vaya! Ha habido un error cargando la lista, mira la consola para mas detalles...\");\n          console.log(error);\n        }\n      );\n\n      // Ademas es necesario obtener la lista de laboratorios\n      this.servicioDatos.obtenerLaboratorios().subscribe(() => {}, (error) => {console.log(error);alert(\"Vaya!, Ha habido un error obteniendo los laboratorios, intentalo de nuevo...\");});\n    }\n\n  }\n\n  mostrarDialogoVer(id:number){ // Cuando se le pasa una id muestra el dialogo de datos, no hace nada si el usuario no tiene permiso de ver el detalle\n\n    if(this.usuario.permisoPantalla(\"detalle\").acceso) { // Indica que el usuario tiene permiso de modificacion\n\n      // A continuacion se le pasan los datoos pertinentes al dialogo\n      let referenciaDialogo = this.dialogo.open(DialogoComponent);\n      referenciaDialogo.componentInstance.medicamento = this.listaMedicamentos[this.servicioDatos.localizarPorId(id)];\n      referenciaDialogo.componentInstance.nombreLab =this.servicioDatos.listaLaboratorios[this.servicioDatos.localizarLabPorId(referenciaDialogo.componentInstance.medicamento.laboratorio)].nombre;\n    }\n  }\n\n  mostrarFormularioEdicion(id:number){\n    let medicamento = this.listaMedicamentos[this.servicioDatos.localizarPorId(id)];\n    // Muestra el formulario de edicion del medicamento en un dialogo modal:\n    let referenciaDialogo = this.dialogo.open(DialogoFormularioComponent);\n    referenciaDialogo.componentInstance.medicamento = medicamento;\n    referenciaDialogo.componentInstance.modo = false;\n    referenciaDialogo.componentInstance.listaLaboratorios = this.servicioDatos.listaLaboratorios; // Lista de laboratorios cuyos elementos poseen los atributos que necesita el componente material select para funcionar\n\n    /*referenciaDialogo.afterClosed.then(result => {\n      console.log(`Dialog result: ${result}`); // Pizza!\n    });*/\n    referenciaDialogo.afterClosed().subscribe(() => {this.servicioDatos.modificar(medicamento);});\n  }\n\n  mostrarFormularioCreacion(){\n\n    // Se crea un objeto nuevo vacio en el que se almacenara el medicamento que se esta creando\n    let medicamento: Medicamento = new Medicamento(-1,'',0,0); // Indica un id temporal\n    // Muestra el formulario de edicion del medicamento en un dialogo modal:\n    let referenciaDialogo = this.dialogo.open(DialogoFormularioComponent);\n    referenciaDialogo.componentInstance.medicamento = medicamento;\n    referenciaDialogo.componentInstance.modo = true;\n    referenciaDialogo.componentInstance.listaLaboratorios = this.servicioDatos.listaLaboratorios;\n    referenciaDialogo.afterClosed().subscribe(() => {this.servicioDatos.insertar(medicamento);});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pantallas/datos/datos.component.ts","/**\n * Created by antonio on 21/01/17.\n */\nimport { Component } from '@angular/core';\nimport {LoginService} from \"../../shared/login.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n\n  constructor(private servicioLogin: LoginService, private router: Router){ // Gracias a la inyeccion de dependencia de angular\n\n  }\n\n  submit(formulario: any):void{ // Otra opcion: el object destructuring\n    console.log(\"Enviando datos, usuario: \"+formulario.usuario+\" y contraseña \"+formulario.pass);\n    this.servicioLogin.login(formulario.usuario, formulario.pass).subscribe(\n      () => this.router.navigate([\"lista\"]),\n      (error) => {alert(\"Oh, vaya! Ha habido un error, mira la consola para mas detalles...\"); console.log(error);}\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pantallas/login/login.component.ts","/**\n * Created by desarrollo on 23/01/17.\n */\n\nexport class Laboratorio{\n\n  constructor(public id:number, public nombre:string){};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/laboratorio.model.ts","/**\n * Created by antonio on 21/01/17.\n */\n\n\n// representa los permisos que se tienen para una determinada pantalla\n\nexport class Permiso{\n\n  /*\n  Esto ya no es necesario dado que al usar public en el constructor es como si se declararan estos campos\n  pantalla: string;\n  acceso: boolean;\n  modificacion: boolean;\n  */\n  constructor(public pantalla: string, public acceso:boolean, public modificacion:boolean){}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/permiso.model.ts","import {Permiso} from \"./permiso.model\";\n/**\n * Created by antonio on 21/01/17.\n */\n\n// representa un usuario que ha hecho login y tiene unos permisos determinados\nexport class Usuario{\n  nombre: string;\n  permisos: Permiso[]; // Permisos del ususuario\n\n  constructor(){\n    // Ojo!! El array es un objeto y por eso hay que inicalizarlo!!\n    // Inicializar los arrays!!\n   this.permisos = [];\n  }\n\n  // Dado un nombre de pantalla, devuelve el permiso\n  permisoPantalla(pantalla:string): Permiso{\n    let permiso: Permiso;\n    let i = 0;\n\n    while(i < this.permisos.length && this.permisos[i].pantalla != pantalla){\n      i++;\n    }\n\n    if(i == this.permisos.length){\n      permiso = null; // Si no se encuentra se devuelve null\n    }\n    else{\n      permiso = this.permisos[i];\n    }\n    return permiso;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/usuario.model.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 852\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialogo-formulario/dialogo-formulario.component.css\n// module id = 853\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialogo/dialogo.component.css\n// module id = 854\n// module chunks = 0","module.exports = \"div{\\n  margin-bottom: 0.5%;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/medicamento/medicamento.component.css\n// module id = 855\n// module chunks = 0","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pantallas/datos/datos.component.css\n// module id = 856\n// module chunks = 0","module.exports = \".cuadro-login{\\n  background-color: #E0E0E0;\\n  margin: 2% 15% 2% 15%;\\n  padding: 2%;\\n  color: #212121;\\n  text-align: center;\\n}\\n\\n.grande{\\n  font-size: 2em;\\n}\\n\\nmd-input-container{\\n  text-align: left;\\n}\\n\\nform{\\n  margin: 4%;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pantallas/login/login.component.css\n// module id = 857\n// module chunks = 0","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 858\n// module chunks = 0","module.exports = \"<h2 [innerHTML]=\\\"modo ? 'Creación de medicamento':'Edición de medicamento'\\\"></h2>\\n\\n<form #formulario=\\\"ngForm\\\" (ngSubmit)=\\\"submit(formulario.value)\\\" style=\\\"text-align: center;\\\">\\n\\n  Nombre: <md-input-container class=\\\"margenInferior\\\">\\n    <input type=\\\"text\\\" md-input placeholder=\\\"Nombre de medicamento\\\" required [(ngModel)]=\\\"medicamento.nombreMedicamento\\\" name=\\\"nombre\\\">\\n  </md-input-container>\\n  <br>\\n  Cantidad: <md-input-container class=\\\"margenInferior\\\">\\n    <input type=\\\"number\\\" md-input placeholder=\\\"Cantidad\\\" required [(ngModel)] = \\\"medicamento.cantidadDisponible\\\" name=\\\"cantidad\\\">\\n  </md-input-container>\\n  <br>\\n  Laboratorio: <md-select required=\\\"true\\\" class=\\\"margenInferior\\\" placeholder=\\\"Laboratorio\\\" [(ngModel)]=\\\"medicamento.laboratorio\\\" name=\\\"laboratorio\\\">\\n  <md-option *ngFor=\\\"let laboratorio of listaLaboratorios\\\" [value]=\\\"laboratorio.id\\\">\\n    {{laboratorio.nombre}}\\n  </md-option>\\n</md-select>\\n  <br>\\n  <button type=\\\"submit\\\" *ngIf=\\\"modo\\\" md-raised-button style=\\\"margin-top: 2%;\\\" [disabled]=\\\"!formulario.valid || formulario.value.laboratorio == ''\\\">Añadir medicamento</button>\\n  <button type=\\\"submit\\\" *ngIf=\\\"!modo\\\" md-raised-button style=\\\"margin-top: 2%;\\\" [disabled]=\\\"!formulario.valid || formulario.value.laboratorio == ''\\\">Modificar medicamento</button>\\n</form>\\n<!-- Un conjunto de FormControl (elementos basicos del formulario) es un FormGroup\\nCuando se usa en los campos el ngModel sin ponerle atributo y sin [()] (banna in thebox) significa que se quiere crear\\nun FormControl de cara a que se envie el formulario\\n Para ello es importante que el campo tenga un nombre, que es de donde coge angular el nombre dle atributo para el objeto\\n que posteriormente genera\\n-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialogo-formulario/dialogo-formulario.component.html\n// module id = 859\n// module chunks = 0","module.exports = \"<div class=\\\"tabla\\\">\\n  <div class=\\\"fila\\\"><div class=\\\"celda\\\"><h2>Datos del medicamento:</h2></div></div>\\n  <div class=\\\"fila\\\"><div class=\\\"celda\\\"><b>Id:</b></div><div class=\\\"celda\\\">{{medicamento.idMedicamento}}</div></div>\\n  <div class=\\\"fila\\\"><div class=\\\"celda\\\"><b>Nombre:</b></div><div class=\\\"celda\\\">{{medicamento.nombreMedicamento}}</div></div>\\n  <div class=\\\"fila\\\"><div class=\\\"celda\\\"><b>Cantidad:</b></div><div class=\\\"celda\\\">{{medicamento.cantidadDisponible}}</div></div>\\n  <div class=\\\"fila\\\"><div class=\\\"celda\\\"><b>Laboratorio:</b></div><div class=\\\"celda\\\">{{nombreLab}}</div></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialogo/dialogo.component.html\n// module id = 860\n// module chunks = 0","module.exports = \"<md-card *ngIf=\\\"criterioBusqueda == '' || cumpleCriterio()\\\">\\n  <div class=\\\"tabla\\\">\\n  <div class=\\\"fila\\\">\\n    <div class=\\\"celda\\\" (click)=\\\"onClickDetalles()\\\" style=\\\"width: 100%;\\\">{{medicamento.nombreMedicamento}}</div>\\n    <div class=\\\"celda\\\"><button *ngIf=\\\"servicioLogin.usuario.permisoPantalla('detalle').modificacion\\\" md-icon-button style=\\\"vertical-align: middle;\\\" (click) = \\\"editar()\\\"><md-icon>edit</md-icon></button></div>\\n    <div class=\\\"celda\\\"><button *ngIf=\\\"servicioLogin.usuario.permisoPantalla('lista').modificacion\\\" md-icon-button style=\\\"vertical-align: middle;\\\" (click) = \\\"borrar()\\\"><md-icon>delete</md-icon></button></div>\\n  </div>\\n  </div>\\n</md-card>\\n<div></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/medicamento/medicamento.component.html\n// module id = 861\n// module chunks = 0","module.exports = \"<div class=\\\"tabla maxAnchoAlto\\\">\\n  <div class=\\\"fila\\\">\\n    <div class=\\\"celda\\\"> <!-- Esta fila tiene la altura maxima...-->\\n      <div style=\\\"background-color: #00897B; padding: 1%; color:#FFFFFF;font-size: 1.1em;\\\">\\n        Hola! {{nombre}}, bienvenid@ al sistema.\\n        <button md-raised-button style=\\\"margin-left: 2%; color:#202020;\\\" (click)=\\\"logout()\\\">Salir</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fila\\\">\\n    <div class=\\\"celda\\\"> <!-- Esta fila tiene la altura maxima...-->\\n      <div style=\\\"background-color: #E0E0E0; padding: 1%; color:#E1F5FE;font-size: 1.1em;\\\">\\n        <md-input-container style=\\\"width: 95%;\\\">\\n          <input md-input style=\\\"color: black;\\\" placeholder=\\\"Buscar medicamento...\\\" [(ngModel)] = \\\"busquedaNombre\\\">\\n        </md-input-container>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fila\\\">\\n    <div class=\\\"celda\\\" style=\\\"height: 100%;\\\"> <!-- Esta fila tiene la altura maxima...-->\\n      <div style=\\\"position: relative; height: 100%;\\\">\\n        <!-- Hay que usar el pipe por su nombre-->\\n        <medicamento *ngFor=\\\"let medicamento of listaMedicamentos\\\" [medicamento]=\\\"medicamento\\\" [criterioBusqueda]=\\\"busquedaNombre\\\" (verDetalles)=\\\"mostrarDialogoVer($event)\\\" (editarMedicamento)=\\\"mostrarFormularioEdicion($event)\\\"></medicamento>\\n\\n        <button (click) = \\\"mostrarFormularioCreacion()\\\" *ngIf=\\\"usuario.permisoPantalla('lista').modificacion\\\" md-fab style=\\\"position: absolute; right: 5px; bottom: 5px;\\\"><md-icon>add</md-icon></button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fila\\\">\\n    <div class=\\\"celda\\\"> <!-- Esta fila tiene la altura maxima...-->\\n      <div style=\\\"background-color: #607D8B; padding: 1%; color:#ECEFF1;font-size: 1.1em; text-align: center\\\">Gestión de la Información - Trabajo en grupo curso 2016 - 2017</div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pantallas/datos/datos.component.html\n// module id = 862\n// module chunks = 0","module.exports = \"<div class=\\\"tabla maxAnchoAlto\\\">\\n  <div class=\\\"fila\\\">\\n    <div class=\\\"celda alineacionVertical\\\">\\n      <div>\\n        <div class=\\\"cuadro-login\\\">\\n          <span class=\\\"grande\\\">Login de usuarios</span>\\n          <form #formulario=\\\"ngForm\\\" (ngSubmit)=\\\"submit(formulario.value)\\\">\\n            <md-input-container>\\n              <input type=\\\"text\\\" md-input placeholder=\\\"Nombre de usuario\\\" required ngModel name=\\\"usuario\\\">\\n            </md-input-container>\\n            <br>\\n            <md-input-container style=\\\"margin-top: 1%;\\\">\\n              <input md-input type=\\\"password\\\" placeholder=\\\"Contraseña\\\" required ngModel name=\\\"pass\\\">\\n            </md-input-container>\\n            <br>\\n            <button type=\\\"submit\\\" md-raised-button style=\\\"margin-top: 2%;\\\" [disabled]=\\\"!formulario.valid\\\">Acceder</button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Un conjunto de FormControl (elementos basicos del formulario) es un FormGroup\\nCuando se usa en los campos el ngModel sin ponerle atributo y sin [()] (banna in thebox) significa que se quiere crear\\nun FormControl de cara a que se envie el formulario\\n Para ello es importante que el campo tenga un nombre, que es de donde coge angular el nombre dle atributo para el objeto\\n que posteriormente genera\\n-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pantallas/login/login.component.html\n// module id = 863\n// module chunks = 0"],"sourceRoot":""}